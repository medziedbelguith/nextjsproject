import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {app,database} from '../firebaseConfig'
import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import {collection,addDoc,getDoc, getDocs,doc,updateDoc,deleteDoc} from 'firebase/firestore';
export default function Home() {
  const [ID,setID]=useState(null);
  const [name,setName]=useState('');
  const [age,setAge]=useState(null);
  const databaseRef=collection(database,'CRUD Data');
  const [fireData,setFireData]=useState([]);
  const [isUpdate,setIsUpdate]=useState(false);
  const router=useRouter();
  useEffect(()=>{
    let token=sessionStorage.getItem('Token')
    if(token)
    {
     getData() 
    }
    
    if(!token){
        router.push('/register'); 
    }
   },[])
   const addData=()=>{
   addDoc(databaseRef,{
    name:name,
    age:Number(age)
   })
   .then(()=>{
     alert('Data Sent')
     getData()
     setName('')
     setAge(null)
   })
   .catch((err)=>{
     console.error(err);
   })
   }
   const getData=async()=>{
   await  getDocs(databaseRef)
   .then((response)=>{
   setFireData(response.docs.map((data)=>{
     return {...data.data(),data:data.id}
   }))
   })
   }
   const getID=(id,name,age)=>{
     setID(id)
     setName(name)
     setAge(age)
     setIsUpdate(true)
   }
 const updateFields=()=>{
    let fieldToEdit=doc(database,'CRUD Data',ID);
    updateDoc(fieldToEdit,{
      name:name,
      age:Number(age)
    })
    .then(()=>{
     alert('Data Updated')
     getData()
     setName('')
     setAge(null)
     setIsUpdate(false)
   })
   .catch((err)=>{
     console.error(err);
   })

   }
   const deleteDocument=(id)=>{
    let fieldToDelete=doc(database,'CRUD Data',id);
    deleteDoc(fieldToDelete)
    .then(()=>{
      alert('Data Deleted')
      getData()
    })
    .catch((err)=>{
      alert('Cannot  Delete that field...')
    })
   }
   const logout=()=>{
     sessionStorage.removeItem('Token')
     router.push('/register')
   }
  return (
    <div className={styles.container}>
      <Head>
        <title>Next CRUD AUTH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          <button onClick={logout}>Log Out</button>
        </div>
      <h1>Home</h1>
      <input placeholder='Name' className={styles.inputBox} type="text" onChange={(event)=>setName(event.target.value)} value={name}/>
      <input placeholder='Age'  className={styles.inputBox} type="number"  onChange={(event)=>setAge(event.target.value)} value={age}/>
      {isUpdate ? ( <button className={styles.BUTTON} onClick={updateFields}>UPDATE</button>): ( <button className={styles.BUTTON} onClick={addData}>ADD</button>)}
      <div>
        {fireData.map((data)=>{
          return(
            <div className={styles.flex}>
              <h1>Name:{data.name}</h1>
              <p>Age:{data.age}</p>
              <button className={styles.button} onClick={()=>getID(data.data,data.name,data.age)}>Update</button>
              <button className={styles.button} onClick={()=>deleteDocument(data.data)}>Delete</button>
            </div>
          )
        })

        }
      </div>
      </main>
    </div>
  )
}
